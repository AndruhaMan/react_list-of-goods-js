{"version":3,"sources":["App.jsx","index.jsx"],"names":["SORT_FIELD_NAME","SORT_FIELD_LENGTH","goodsFromServer","App","useState","sortingField","setSortingField","isReversed","changeSortingOrder","sortedGoods","goods","sort","good1","good2","localeCompare","length","reverse","sortGoods","className","type","cn","onClick","currentOrder","hidden","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKMA,EAAkB,OAClBC,EAAoB,SAEbC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAsBWC,EAAM,WACjB,MAAwCC,mBAAS,IAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KACA,EAAyCF,oBAAS,GAAlD,mBAAOG,EAAP,KAAmBC,EAAnB,KAKMC,EA1BU,SAACC,EAAOL,EAAcE,GACtC,IAAME,EAAc,YAAIC,GAAOC,MAAK,SAACC,EAAOC,GAC1C,OAAQR,GACN,KAAKL,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,MAAO,OAIb,OAAOR,EACHE,EAAYO,UACZP,EAUgBQ,CAAUf,EAAiBG,EAAcE,GAE7D,OACE,sBAAKW,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IACT,SACA,UACA,CAAE,WAAYf,IAAiBL,IAEjCqB,QAAS,kBAAMf,EAAgBN,IAPjC,iCAYA,wBACEmB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,WAAYf,IAAiBJ,IAEjCoB,QAAS,kBAAMf,EAAgBL,IAPjC,4BAYA,wBACEkB,KAAK,SACLD,UAAWE,IACT,SACA,aACA,CAAE,YAA2B,IAAfb,IAEhBc,QAAS,kBAtCfb,GAAmB,SAAAc,GAAY,OAAKA,MA+BhC,qBAYA,wBACEH,KAAK,SACLD,UAAWE,IACT,SACA,YACA,WACA,CAAEG,OAA0B,KAAjBlB,IAAwC,IAAfE,IAEtCc,QAAS,WACPf,EAAgB,IAChBE,GAAmB,IAVvB,sBAiBF,6BACGC,EAAYe,KAAI,SAAAC,GAAI,OACnB,oBAAI,UAAQ,OAAZ,SAA+BA,GAAPA,YCxGlCC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f29cfa63.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nconst SORT_FIELD_NAME = 'name';\nconst SORT_FIELD_LENGTH = 'length';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst sortGoods = (goods, sortingField, isReversed) => {\n  const sortedGoods = [...goods].sort((good1, good2) => {\n    switch (sortingField) {\n      case SORT_FIELD_NAME:\n        return good1.localeCompare(good2);\n\n      case SORT_FIELD_LENGTH:\n        return good1.length - good2.length;\n\n      default:\n        return '';\n    }\n  });\n\n  return isReversed\n    ? sortedGoods.reverse()\n    : sortedGoods;\n};\n\nexport const App = () => {\n  const [sortingField, setSortingField] = useState('');\n  const [isReversed, changeSortingOrder] = useState(false);\n\n  const toggleSortingOrder = () => (\n    changeSortingOrder(currentOrder => !currentOrder)\n  );\n  const sortedGoods = sortGoods(goodsFromServer, sortingField, isReversed);\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-info',\n            { 'is-light': sortingField !== SORT_FIELD_NAME },\n          )}\n          onClick={() => setSortingField(SORT_FIELD_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-success',\n            { 'is-light': sortingField !== SORT_FIELD_LENGTH },\n          )}\n          onClick={() => setSortingField(SORT_FIELD_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-warning',\n            { 'is-light': isReversed !== true },\n          )}\n          onClick={() => toggleSortingOrder()}\n        >\n          Reverse\n        </button>\n\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            'is-danger',\n            'is-light',\n            { hidden: (sortingField === '') && (isReversed === false) },\n          )}\n          onClick={() => {\n            setSortingField('');\n            changeSortingOrder(false);\n          }}\n        >\n          Reset\n        </button>\n      </div>\n\n      <ul>\n        {sortedGoods.map(good => (\n          <li data-cy=\"Good\" key={good}>{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}